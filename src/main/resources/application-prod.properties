#data source
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

#jpa
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true 

#openfeign
url.buscar.numero.cartao=http://contas:8888/api/cartoes
url.analise.financeira=http://analise:9999/api/solicitacao

#actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

#schedule
associar.cartao.proposta.agendamento=30000

#oauth2
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/proposta
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:proposta}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}